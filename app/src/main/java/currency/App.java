/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package currency;

import processing.core.PApplet;
import processing.data.JSONObject;

import java.io.*;
import java.util.*;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

//for json object
//import org.json.JSONObject;
import java.io.IOException;

public class App {

    public static JSONObject CurrencyData;
    public static int userFlag = 0;
    public static int adminFlag = 0;
    public static User userObject;
    public static Admin adminObject;
    public static JSONObject  UserData;
    public static JSONObject  AdminData;



    public static void loadCurrencyData() {
        File file = new File("Currency_Data.json");
        CurrencyData = PApplet.loadJSONObject(file);
    }

    public static void loadUserDate(){
        File file = new File("user.json");
        UserData = PApplet.loadJSONObject(file);
    }

    public static void loadAdminDate(){
        File file = new File("Admin.json");
        AdminData = PApplet.loadJSONObject(file);
    }

    public void EasyPrint(){
        JSONObject dateObject = CurrencyData.getJSONObject("2024-08-25");
        JSONObject audObject = dateObject.getJSONObject("AUD");
        float value = audObject.getFloat("USD");
        System.out.println("AUD->USD" + ": " + value);

        JSONObject newDate = new JSONObject();
        JSONObject newCur = new JSONObject();
        newCur.setInt("Popularity", 1);
        newCur.setDouble("USD", 0.72);

        newDate.setJSONObject("CAD", newCur);
        CurrencyData.setJSONObject("2024-08-26", newDate);
    }

    public void AnotherPrint(){
        double cad_value = CurrencyData.getJSONObject("2024-08-26").getJSONObject("CAD").getDouble("USD");

        System.out.printf("CAD->USD: %.2f\n", cad_value);
    }

    /**
     * Prompts the user to select whether to log in or signup  as a User or an Admin .
     * The method continuously prompts for input until a valid choice is made.
     *
     * The user can enter:
     * - 1 to log in as a User.
     * - 2 to log in as an Admin.
     * - 3 to sign up account for user.
     * - 4 to sign up account for admin.
     *
     * If the user enters a value that is not an integer or an integer that is not 1 , 2, 3 or 4,
     * the method prompts the user to enter a valid option.
     *
     * When a valid choice is made:
     * - The appropriate flag (`userFlag` or `adminFlag`) is set to 1,
     *   indicating the selected role.
     * - The method then exits the loop.
     *
     * Assumes that `userFlag` and `adminFlag` are accessible variables within the class.
     */
    public void select(){

        Scanner scan = new Scanner(System.in);

        //Pick user or admin login
        while (true) {
            System.out.println("Do you wish to log in as User or Admin?");
            System.out.println("1 for User, 2 for Admin , 3 User SIGNUP, 4 Admin SIGNUP");

            //Ensure the input is integer
            if (scan.hasNextInt()) {
                int choice = scan.nextInt();
                scan.nextLine();

                if (choice == 1) {
                    System.out.println("Login as User");
                    userFlag = 1;
                    break;

                } else if (choice == 2) {
                    System.out.println("Login as Admin");
                    adminFlag = 1;
                    break;

                } else if(choice == 3){
                    System.out.println("Sign up for User: ");
                    System.out.println("Please enter your usename: ");
                    String enterID = scan.nextLine();
                    System.out.println("Please enter your password: ");
                    String enterPassword = scan.nextLine();

                    try{
                        UserData.setString(enterID, enterPassword);
                        Files.write(Paths.get("user.JSON"), UserData.toString().getBytes());
                        System.out.println("User successfully signed up");
                    }catch (IOException e){
                        e.printStackTrace();
                    }

                } else if (choice == 4){
                    System.out.println("Sign up for Admin: ");
                    System.out.println("Please enter your usename: ");
                    String enterID = scan.nextLine();
                    System.out.println("Please enter your password: ");
                    String enterPassword = scan.nextLine();

                    try{
                        AdminData.setString(enterID, enterPassword);
                        Files.write(Paths.get("admin.JSON"), AdminData.toString().getBytes());
                        System.out.println("Admin successfully signed up");
                    }catch (IOException e){
                        e.printStackTrace();
                    }
                }else {
                    //Make sure the integer is either 1 or 2
                    System.out.println("Please pick number between 1- 4.");
                }
            }else{
                System.out.println("Please enter a valid option.");

            }
        }
    }

    /**
     * Sets up the ID and password for a User or an Admin based on the login selection.
     *
     * This method prompts the user to input a username and password. Depending on whether
     * the `userFlag` or `adminFlag` is set, it will create either a `User` or an `Admin` object.
     *
     * - If `userFlag` is set to 1, the method will create a `User` object.
     * - If `adminFlag` is set to 1, the method will create an `Admin` object.
     *
     * After creating the respective object, the method displays the ID and password
     * that were set.
     *
     * Assumes that `userFlag`, `adminFlag`, `userObject`, and `adminObject`
     * are accessible variables within the class.
     *
     */
    public void setUp(){

        //Set up ID and password
        Scanner scan = new Scanner(System.in);

        if(userFlag == 1){

            //check whether it is valid Username
            System.out.println("Username: ");
            String ID;
            String correctPassword;
            while(true){
                ID = scan.nextLine();
                if (UserData.hasKey(ID)) {
                    correctPassword = UserData.getString(ID);
                    break;
                }else{
                    System.out.println("Please enter a valid username.");
                }
            }

            //check whether it is valid password
            System.out.println("Password: ");
            String Password;
            while(true){
                Password = scan.nextLine();
                if(correctPassword.equals(Password)){
                    System.out.println("You have login as User");
                    break;
                }else{
                    System.out.println("Please enter a valid password.");
                }
            }

            userObject = new User(ID, Password);
            System.out.println("ID: " + userObject.getUID());
            System.out.println("Password: " + userObject.getPassword());

        }else if(adminFlag == 1){

            //check whether it is valid Username
            System.out.println("Username: ");
            String ID;
            String correctPassword;
            while(true){
                ID = scan.nextLine();
                if (AdminData.hasKey(ID)) {
                    correctPassword = AdminData.getString(ID);
                    break;
                }else{
                    System.out.println("Please enter a valid username.");
                }
            }

            //check whether it is valid password
            System.out.println("Password: ");
            String Password;
            while(true){
                Password = scan.nextLine();
                if(correctPassword.equals(Password)){
                    System.out.println("You have login as Admin");
                    break;
                }else{
                    System.out.println("Please enter a valid password.");
                }
            }

            adminObject = new Admin(ID, Password);
            System.out.println("ID: " + adminObject.getUID());
            System.out.println("Password: " + adminObject.getPassword());
        }
    }

    public static void main(String[] args) {

        loadCurrencyData();
        loadAdminDate();
        loadUserDate();

        App app = new App();

        while(true){
            app.select();
            app.setUp();

            //menu
            while(true){
                Scanner scan = new Scanner(System.in);

                if(userFlag == 1) {
                    userObject.Menu();
                }else if(adminFlag == 1) {
                    adminObject.Menu();
                }

                if(scan.hasNextInt()){
                    String currency1;
                    String currency2;

                    int pick = scan.nextInt();
                    scan.nextLine();

                    if(pick == 1){
                        //convert Currency
                        //get first currency
                        System.out.println("Pick your first currency(Must be three letters): ");
                        while(true){
                            currency1 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency1.length() == 3 && currency1.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        //get second currency
                        System.out.println("Pick your second currency: ");
                        while(true){
                            currency2 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency2.length() == 3 && currency2.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        //money amount
                        System.out.println("Insert the money amount (2 decimal place): ");
                        boolean moneyMatch = false;
                        String money = "";

                        while(moneyMatch == false){
                            money = scan.nextLine();
                            moneyMatch= money.matches("\\d+\\.\\d{2}");
                            if(moneyMatch == false){
                                System.out.println("Invalid money amount, please try again: ");
                            }
                        }

                        System.out.println("currency 1: " + currency1);
                        System.out.println("currency 2: " + currency2);
                        System.out.println("Money amount: " + money);

                        if(userFlag == 1){
                            userObject.convertCurrency(Double.parseDouble(money), currency1, currency2, CurrencyData);
                        }else if(adminFlag == 1){
                            adminObject.convertCurrency(Double.parseDouble(money), currency1, currency2, CurrencyData);
                        }


                    }else if(pick == 2){
                        //Display popular
                        if(userFlag == 1){
                            userObject.displayPopular(CurrencyData);
                        }else if(adminFlag == 1){
                            adminObject.displayPopular(CurrencyData);
                        }

                    }else if(pick == 3){
                        //display summary
                        LocalDate startDate;
                        LocalDate endDate;
                        String start_date;
                        String end_date;

                        //get first currency
                        System.out.println("Pick your first currency(Must be three letters): ");
                        while(true){
                            currency1 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency1.length() == 3 && currency1.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        //get second currency
                        System.out.println("Pick your second currency: ");
                        while(true){
                            currency2 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency2.length() == 3 && currency2.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        //check start date format
                        System.out.println("Select your start time (format YYYY-MM-DD) : ");
                        while(true){
                            start_date = scan.nextLine();
                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                            try{
                                startDate = LocalDate.parse(start_date, formatter);
                                break;

                            }catch (DateTimeParseException e){
                                System.out.println("Cannot parse to Date, please try again using the format yyyy-MM-dd.");
                            }
                        }

                        //check end date format
                        System.out.println("Select your end time (format YYYY-MM-DD) : ");
                        while(true){
                            end_date = scan.nextLine();
                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                            try{
                                endDate = LocalDate.parse(end_date, formatter);
                                break;
                            }catch (DateTimeParseException e){
                                System.out.println("Cannot parse to Date, please try again using the format yyyy-MM-dd..");
                            }
                        }

                        if(userFlag == 1){
                            userObject.displaySummary(currency1,currency2,startDate,
                                    endDate,CurrencyData);
                        }else if(adminFlag == 1){
                            adminObject.displaySummary(currency1,currency2,startDate,
                                    endDate,CurrencyData);
                        }



                    }else if(pick == 4 && userFlag == 1){
                        //logout the account
                        System.out.println("User have logout");
                        userFlag = 0;
                        break;

                    }else if(pick == 5 && userFlag == 1){
                        System.out.println("You have exit the System");
                        System.exit(0);
                    }else if(pick == 4 && adminFlag == 1){
                        //Add Currency
                        System.out.println("Please enter new currency name:");
                        String currency;
                        while(true){
                            currency = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency.length() == 3 && currency.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        System.out.println("Please enter the currency rate to USD: ");
                        boolean moneyMatch = false;
                        String rate = "";

                        while(!moneyMatch){
                            rate = scan.nextLine();
                            moneyMatch= rate.matches("\\d+\\.\\d{2}");
                            if(!moneyMatch){
                                System.out.println("Invalid rate, please try again: ");
                            }
                        }
                        adminObject.addCurrency(currency,Double.parseDouble(rate),CurrencyData);
                    } else if(pick == 5 && adminFlag == 1){
                        //Update Rate
                        String updateDate;

                        //get first currency
                        System.out.println("Pick your first currency(Must be three letters): ");
                        while(true){
                            currency1 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency1.length() == 3 && currency1.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        System.out.println("Please enter the currency rate to USD: ");
                        boolean match = false;
                        String rate1 = "";

                        while(!match){
                            rate1 = scan.nextLine();
                            match= rate1.matches("\\d+\\.\\d{2}");
                            if(!match){
                                System.out.println("Invalid rate, please try again: ");
                            }
                        }

                        //get second currency
                        System.out.println("Pick your second currency: ");
                        while(true){
                            currency2 = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency2.length() == 3 && currency2.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }

                        System.out.println("Please enter the currency rate to USD: ");
                        match = false;
                        String rate2 = "";

                        while(!match){
                            rate2 = scan.nextLine();
                            match= rate2.matches("\\d+\\.\\d{2}");
                            if(!match){
                                System.out.println("Invalid rate, please try again: ");
                            }
                        }

                        System.out.println("Select update time (format YYYY-MM-DD) : ");
                        while(true){
                            updateDate = scan.nextLine();
                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

                            try{
                                LocalDate.parse(updateDate, formatter);
                                break;

                            }catch (DateTimeParseException e){
                                System.out.println("Cannot parse to Date, please try again using the format yyyy-MM-dd.");
                            }
                        }

                        adminObject.updateRate(currency1,currency2,updateDate,Double.parseDouble(rate1),Double.parseDouble(rate2),CurrencyData);
                    }else if(pick == 6 && adminFlag == 1){
                        //Update Popular
                        System.out.println("Please enter currency name to add to the popular:");
                        String currency;
                        while(true){
                            currency = scan.nextLine().toUpperCase();

                            // Check if the input is exactly three letters
                            if (currency.length() == 3 && currency.matches("[A-Z]{3}")) {
                                break;  // Exit the loop if the input is valid
                            } else {
                                System.out.println("Invalid input. Please enter a three-letter currency code.");
                            }
                        }
                        adminObject.updatePopular(currency,CurrencyData);
                    }else if(pick == 7 && adminFlag == 1){
                        //logout the account
                        System.out.println("Admin have logout");
                        adminFlag = 0;
                        break;

                    }else if(pick == 8 && adminFlag == 1){
                        System.out.println("You have exit the System");
                        System.exit(0);
                    }else{
                        if(userFlag ==1){
                            System.out.println("Please enter an option between 1-5.");
                        }else if (adminFlag ==1){
                            System.out.println("Please enter an option between 1-8.");
                        }
                    }
                }else{
                    System.out.println("Please enter a valid option.");
                    scan.next();
                }
            }
        }
    }
}
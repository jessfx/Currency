/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'java'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'

    // Add the Processing core library dependency
    implementation 'org.processing:core:3.3.7'

    implementation 'org.json:json:20210307'


}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'currency.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

test {
    // creates a test report automatically every time tests are run
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
    }
}

// the default input stream is set to empty, so you need to add this to take user input
run{
    standardInput = System.in
}